import requests
from collections import defaultdict
import csv
from datetime import datetime

# ======================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
# ======================
BASE_URL = "http://127.0.0.1:8000/resumes"
HEADERS = {
    "Authorization": (
        "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9."
        "eyJzdWIiOiJ0ZXN0IiwiZXhwIjoxNzU1MTc5NjQ3fQ."
        "n4c0F9LEqiUYrYT_QmgP-QLhX3dbMETMae95RSgY9To"
    )
}

skills_to_search = ["Python", "SQL", "Power BI"]
keywords_to_search = ["data analysis", "machine learning", "reporting"]

# ======================
# –§—É–Ω–∫—Ü–∏–∏
# ======================

def fetch_all_resumes():
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—Å–µ —Ä–µ–∑—é–º–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ API."""
    try:
        response = requests.get(BASE_URL, headers=HEADERS)
        response.raise_for_status()
        return response.json()
    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return []

def collect_resumes(skills, keywords):
    """–°–æ–±–∏—Ä–∞–µ—Ç —Ä–µ–∑—é–º–µ —Å –Ω–∞–≤—ã–∫–∞–º–∏ –∏ –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏."""
    combined = defaultdict(lambda: {"skills": set(), "keywords": set()})
    resumes = fetch_all_resumes()

    for resume in resumes:
        filename = resume.get("filename") or resume.get("id", "–ë–µ–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞")
        parsed_data = resume.get("parsed_data", {})
        parsed_skills = parsed_data.get("skills", [])
        text = parsed_data.get("text", "").lower()

        # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤—ã–∫–æ–≤
        normalized_skills = []
        for s in parsed_skills:
            if isinstance(s, str):
                normalized_skills.append(s.lower())
            elif isinstance(s, dict):
                normalized_skills.append(s.get("skill", "").lower())
                if s.get("matched_alias"):
                    normalized_skills.append(s.get("matched_alias").lower())

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤—ã–∫–æ–≤
        for skill in skills:
            if skill.lower() in normalized_skills:
                combined[filename]["skills"].add(skill)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        for keyword in keywords:
            if keyword.lower() in text:
                combined[filename]["keywords"].add(keyword)

    return combined

def print_combined_resumes(combined_resumes):
    """–í—ã–≤–æ–¥ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ä–µ–∑—é–º–µ."""
    if not combined_resumes:
        print("‚ö† –†–µ–∑—é–º–µ —Å —Ç–∞–∫–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏ –∏–ª–∏ –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.\n")
        return

    print("\nüìÑ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–µ–∑—é–º–µ:\n")
    for filename, data in combined_resumes.items():
        skills_list = ", ".join(sorted(data["skills"])) or "–ù–µ—Ç"
        keywords_list = ", ".join(sorted(data["keywords"])) or "–ù–µ—Ç"
        print(f"‚úÖ {filename}:")
        print(f"   - –ù–∞–≤—ã–∫–∏: {skills_list}")
        print(f"   - –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {keywords_list}\n")

def export_to_csv(combined_resumes, filename=None):
    """–≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ CSV."""
    if not filename:
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        filename = f"resumes_{timestamp}.csv"

    with open(filename, mode="w", newline="", encoding="utf-8") as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(["Filename", "Skills", "Keywords"])
        for file, data in combined_resumes.items():
            writer.writerow([
                file,
                ", ".join(sorted(data["skills"])),
                ", ".join(sorted(data["keywords"]))
            ])

    print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ñ–∞–π–ª: {filename}")
    return filename  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞

def show_csv(filename):
    """–í—ã–≤–æ–¥–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ CSV –≤ –∫–æ–Ω—Å–æ–ª—å."""
    print(f"\nüìä –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ {filename}:\n")
    with open(filename, newline='', encoding='utf-8') as f:
        reader = csv.reader(f)
        for row in reader:
            print(row)

# ======================
# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
# ======================
if __name__ == "__main__":
    combined_resumes = collect_resumes(skills_to_search, keywords_to_search)
    print_combined_resumes(combined_resumes)
    csv_file = export_to_csv(combined_resumes)
    show_csv(csv_file)
